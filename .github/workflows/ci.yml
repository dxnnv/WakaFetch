name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-smoke:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20.x]
    env:
      NODE_ENV: production
      BASE_PATH: /wakafetch
      PORT: 23116
      TIMEZONE: America/New_York
      WAKATIME_AUTH: api_key
      WAKATIME_API_KEY: ""
      WAKATIME_USERNAME: current
      CACHE_TTL_HOURS: 6
      REFRESH_MIN_AGE_MINUTES: 10
      MIN_LANG_SECONDS: 60
      REWEIGHT_FILTERED_PERCENTS: 0

    steps:
      - uses: actions/checkout@v4

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install
        run: npm ci

      - name: Typecheck
        run: npx tsc -p tsconfig.json --noEmit

      - name: Lint
        if: ${{ hashFiles('.eslintrc*', 'eslint.config.*') != '' }}
        run: npx eslint .

      - name: Build
        run: npm run build

      - name: Start server
        run: |
          node dist/app/server.js & echo $! > server.pid
          for i in {1..30}; do
            curl -fsS "http://127.0.0.1:${PORT}${BASE_PATH}/healthz" && break
            sleep 1
          done

      - name: Smoke test (raw)
        run: |
          curl -fsS "http://127.0.0.1:${PORT}${BASE_PATH}/stats/raw?timeframe=last_7_days" | jq -e '.last_7_days,timeframe? // .timeframe? | . != null' >/dev/null

      - name: Smoke test (formatted, single stat)
        run: |
          curl -fsS "http://127.0.0.1:${PORT}${BASE_PATH}/stats?timeframe=this_month&stat=languages_by_usage" | jq -e '.languages_by_usage | type=="array"' >/dev/null

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then kill $(cat server.pid) || true; fi
          
  integration-live:
    runs-on: ubuntu-latest
    needs: build-and-smoke
    environment: production
    env:
      NODE_ENV: production
      BASE_PATH: ${{ vars.BASE_PATH || '/wakafetch' }}
      PORT: ${{ vars.PORT || '23115' }}
      TIMEZONE: ${{ vars.TIMEZONE || 'America/New_York' }}
      
      WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
      WAKATIME_USERNAME: ${{ secrets.WAKATIME_USERNAME || 'current' }}
      
      CACHE_TTL_HOURS: 6
      REFRESH_MIN_AGE_MINUTES: 0

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - run: npm ci
      - run: npm run build

      - name: Start server
        if: ${{ env.WAKATIME_API_KEY != '' }}
        run: |
          node dist/app/server.js & echo $! > server.pid
          for i in {1..60}; do
            curl -fsS "http://127.0.0.1:${PORT}${BASE_PATH}/healthz" && break
            sleep 1
          done

      - name: Live call (formatted, this_month)
        if: ${{ env.WAKATIME_API_KEY != '' }}
        run: |
          curl -fsS "http://127.0.0.1:${PORT}${BASE_PATH}/stats?timeframe=this_month" | jq -e '.timeframe=="This Month"' >/dev/null

      - name: Live call (raw + stat pick)
        if: ${{ env.WAKATIME_API_KEY != '' }}
        run: |
          curl -fsS "http://127.0.0.1:${PORT}${BASE_PATH}/stats/raw?timeframe=today&stat=total_time" | jq -e '.total_time != null' >/dev/null

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then kill $(cat server.pid) || true; fi
